【Unity + Git 共同作業手順書】

この手順書は、UnityプロジェクトをGitで管理し、複数人で共同開発するための基本的な作業手順をまとめています。

---

■ 1. 初期準備

・Unityのバージョンをチームで統一しましょう。
・Gitのアカウントを用意してください。
・リポジトリURLを共有し、クローン（ローカルにコピー）してください。

  git clone https://github.com/ユーザー名/リポジトリ名.git

---

■ 2. 作業前の準備

・作業開始前に必ず最新のリモートリポジトリを取得します。

  git pull origin main

---

■ 3. 新しい作業ブランチを作成する（推奨）

・直接mainブランチで作業せず、新しいブランチを作ります。

  git checkout -b feature/ブランチ名

---

■ 4. Unityで作業を行う

・新しいスクリプトやシーンなどを作成・編集します。
・Unityの自動生成ファイル（Libraryフォルダなど）はGit管理しないよう.gitignoreで除外されています。

---

■ 5. 変更をGitに反映する

・変更内容を確認する

  git status

・変更ファイルをステージに登録する

  git add .

・コミットメッセージをつけてコミットする

  git commit -m "作業内容の説明"

---

■ 6. 作業ブランチをリモートにpushする

  git push origin ブランチ名

---

■ 7. プルリクエスト（Pull Request）を作成する

・GitHubなどのリポジトリ管理画面で、作業ブランチからmainブランチへのプルリクエストを作成します。
・コードレビューや動作確認を行い、問題なければmainブランチにマージします。

---

■ 8. 作業終了後のmainブランチの最新化

・mainブランチに切り替えて最新を取得します。

  git checkout main
  git pull origin main

---

■ 注意事項

・mainブランチに直接pushしないでください。必ずプルリクエストを経てマージしましょう。
・コンフリクト（競合）が起きたら、メンバー同士で相談して解決してください。
・.gitignoreは必ず設定して、不要ファイルを共有しないようにしましょう。
・コミットメッセージは誰が見てもわかりやすく簡潔に書きましょう。

---

■ Gitユーザー情報の設定（初回のみ）

  git config --global user.name "あなたの名前"
  git config --global user.email "あなたのメールアドレス"

---

■ Gitコマンドの簡単説明

・git clone ：リポジトリをコピーする
・git pull ：リモートの最新を取得してマージする
・git add ：変更ファイルを登録する
・git commit ：変更をローカルに記録する
・git push ：ローカルの変更をリモートに送る
・git checkout ：ブランチを切り替える
・git branch ：ブランチ一覧を表示する

---

この手順を守って、円滑な共同開発を目指しましょう！

